-- Schema for SevDesk Database
-- This schema represents the structure of SevDesk financial management system
-- with all tables and foreign key relationships

-- Categories (for contacts and other entities)
CREATE TABLE categories (
    id INTEGER NOT NULL, 
    object_name VARCHAR(100), 
    original_id VARCHAR(50), 
    PRIMARY KEY (id)
);

-- Units for products
CREATE TABLE unities (
    id INTEGER NOT NULL, 
    object_name VARCHAR(100), 
    original_id VARCHAR(50), 
    PRIMARY KEY (id)
);

-- Tax rules
CREATE TABLE tax_rules (
    id INTEGER NOT NULL, 
    original_id VARCHAR(50), 
    object_name VARCHAR(50), 
    PRIMARY KEY (id)
);

-- Contacts (customers/suppliers)
CREATE TABLE contacts (
    id INTEGER NOT NULL, 
    original_id VARCHAR(50), 
    object_name VARCHAR(50), 
    "create" DATETIME, 
    "update" DATETIME, 
    name VARCHAR(255), 
    status VARCHAR(50), 
    customer_number VARCHAR(50), 
    parent_id INTEGER, 
    surename VARCHAR(255), 
    familyname VARCHAR(255), 
    titel VARCHAR(50), 
    category_id INTEGER, 
    description TEXT, 
    academic_title VARCHAR(50), 
    gender VARCHAR(1), 
    name2 VARCHAR(255), 
    birthday DATE, 
    vat_number VARCHAR(50), 
    bank_account VARCHAR(100), 
    bank_number VARCHAR(50), 
    default_cashback_time VARCHAR(50), 
    default_cashback_percent VARCHAR(50), 
    default_time_to_pay VARCHAR(50), 
    tax_number VARCHAR(50), 
    tax_office VARCHAR(255), 
    exempt_vat VARCHAR(10), 
    default_discount_amount VARCHAR(50), 
    default_discount_percentage VARCHAR(10), 
    buyer_reference VARCHAR(100), 
    government_agency VARCHAR(10), 
    additional_information TEXT, 
    PRIMARY KEY (id), 
    FOREIGN KEY(parent_id) REFERENCES contacts (id), 
    FOREIGN KEY(category_id) REFERENCES categories (id)
);

-- Bank account transactions
CREATE TABLE check_account_transactions (
    id INTEGER NOT NULL, 
    original_id VARCHAR(50), 
    object_name VARCHAR(50), 
    "create" DATETIME, 
    "update" DATETIME, 
    value_date DATE, 
    entry_date DATE, 
    paymt_purpose TEXT, 
    amount VARCHAR(50), 
    payee_payer_name VARCHAR(255), 
    payee_payer_acct_no VARCHAR(100), 
    payee_payer_bank_code VARCHAR(50), 
    gv_code VARCHAR(50), 
    entry_text TEXT, 
    prima_nota_no VARCHAR(50), 
    status VARCHAR(50), 
    enshrined DATE, 
    source_transaction_id INTEGER, 
    target_transaction_id INTEGER, 
    PRIMARY KEY (id), 
    FOREIGN KEY(source_transaction_id) REFERENCES check_account_transactions (id), 
    FOREIGN KEY(target_transaction_id) REFERENCES check_account_transactions (id)
);

-- Products/Parts
CREATE TABLE parts (
    id INTEGER NOT NULL, 
    original_id VARCHAR(50), 
    object_name VARCHAR(50), 
    name VARCHAR(255), 
    part_number VARCHAR(50), 
    stock FLOAT, 
    unity_id INTEGER, 
    tax_rate FLOAT, 
    "create" DATETIME, 
    "update" DATETIME, 
    text TEXT, 
    stock_enabled BOOLEAN, 
    price FLOAT, 
    price_net FLOAT, 
    price_gross FLOAT, 
    price_purchase FLOAT, 
    status VARCHAR(50), 
    internal_comment TEXT, 
    PRIMARY KEY (id), 
    FOREIGN KEY(unity_id) REFERENCES unities (id)
);

-- Invoices
CREATE TABLE invoices (
    id INTEGER NOT NULL, 
    original_id VARCHAR(50), 
    object_name VARCHAR(50), 
    invoice_number VARCHAR(50), 
    contact_id INTEGER, 
    "create" DATETIME, 
    "update" DATETIME, 
    invoice_date DATETIME, 
    header TEXT, 
    head_text TEXT, 
    foot_text TEXT, 
    time_to_pay VARCHAR(50), 
    discount_time VARCHAR(50), 
    discount VARCHAR(50), 
    pay_date DATE, 
    delivery_date DATE, 
    status VARCHAR(50), 
    small_settlement BOOLEAN, 
    tax_text VARCHAR(255), 
    dunning_level VARCHAR(10), 
    tax_type VARCHAR(50), 
    send_date DATE, 
    invoice_type VARCHAR(10), 
    account_intervall VARCHAR(50), 
    account_next_invoice DATE, 
    reminder_total VARCHAR(50), 
    reminder_debit VARCHAR(50), 
    reminder_deadline DATE, 
    reminder_charge VARCHAR(50), 
    address TEXT, 
    currency VARCHAR(10), 
    sum_net VARCHAR(50), 
    sum_tax VARCHAR(50), 
    sum_gross VARCHAR(50), 
    sum_discounts VARCHAR(50), 
    paid_amount FLOAT, 
    customer_internal_note TEXT, 
    show_net BOOLEAN, 
    enshrined DATE, 
    send_type VARCHAR(50), 
    PRIMARY KEY (id), 
    FOREIGN KEY(contact_id) REFERENCES contacts (id)
);

-- Credit Notes
CREATE TABLE credit_notes (
    id INTEGER NOT NULL, 
    original_id VARCHAR(50), 
    object_name VARCHAR(50), 
    "create" DATETIME, 
    "update" DATETIME, 
    credit_note_number VARCHAR(50), 
    contact_id INTEGER, 
    credit_note_date DATETIME, 
    status VARCHAR(50), 
    header TEXT, 
    head_text TEXT, 
    foot_text TEXT, 
    delivery_date DATE, 
    small_settlement BOOLEAN, 
    contact_person_id INTEGER, 
    tax_text VARCHAR(255), 
    tax_type VARCHAR(50), 
    send_date DATE, 
    address TEXT, 
    currency VARCHAR(10), 
    sum_net VARCHAR(50), 
    sum_tax VARCHAR(50), 
    sum_gross VARCHAR(50), 
    sum_discounts VARCHAR(50), 
    customer_internal_note TEXT, 
    show_net BOOLEAN, 
    send_type VARCHAR(50), 
    PRIMARY KEY (id), 
    FOREIGN KEY(contact_id) REFERENCES contacts (id), 
    FOREIGN KEY(contact_person_id) REFERENCES contacts (id)
);

-- Vouchers/Receipts
CREATE TABLE vouchers (
    id INTEGER NOT NULL, 
    original_id VARCHAR(50), 
    object_name VARCHAR(50), 
    map_all BOOLEAN, 
    status VARCHAR(50), 
    tax_rule_id INTEGER, 
    tax_type VARCHAR(50), 
    credit_debit VARCHAR(5), 
    voucher_type VARCHAR(5), 
    "create" DATETIME, 
    "update" DATETIME, 
    voucher_date DATETIME, 
    supplier_id INTEGER, 
    supplier_name VARCHAR(255), 
    description TEXT, 
    pay_date DATE, 
    sum_net FLOAT, 
    sum_tax FLOAT, 
    sum_gross FLOAT, 
    sum_net_accounting FLOAT, 
    sum_tax_accounting FLOAT, 
    sum_gross_accounting FLOAT, 
    sum_discounts FLOAT, 
    sum_discounts_foreign_currency FLOAT, 
    paid_amount FLOAT, 
    currency VARCHAR(10), 
    property_foreign_currency_deadline DATE, 
    property_exchange_rate FLOAT, 
    recurring_interval VARCHAR(50), 
    recurring_start_date DATETIME, 
    recurring_next_voucher DATE, 
    recurring_last_voucher DATE, 
    recurring_end_date DATE, 
    enshrined DATE, 
    payment_deadline DATE, 
    delivery_date DATE, 
    delivery_date_until DATE, 
    PRIMARY KEY (id), 
    FOREIGN KEY(tax_rule_id) REFERENCES tax_rules (id), 
    FOREIGN KEY(supplier_id) REFERENCES contacts (id)
);

-- Orders
CREATE TABLE orders (
    id INTEGER NOT NULL, 
    original_id VARCHAR(50), 
    object_name VARCHAR(50), 
    "create" DATETIME, 
    "update" DATETIME, 
    order_number VARCHAR(50), 
    contact_id INTEGER, 
    order_date DATETIME, 
    status VARCHAR(50), 
    header TEXT, 
    head_text TEXT, 
    foot_text TEXT, 
    delivery_terms TEXT, 
    payment_terms TEXT, 
    version VARCHAR(10), 
    small_settlement BOOLEAN, 
    tax_rate VARCHAR(50), 
    tax_text VARCHAR(255), 
    tax_type VARCHAR(50), 
    order_type VARCHAR(5), 
    send_date DATE, 
    address TEXT, 
    currency VARCHAR(10), 
    sum_net VARCHAR(50), 
    sum_tax VARCHAR(50), 
    sum_gross VARCHAR(50), 
    sum_discounts VARCHAR(50), 
    sum_net_foreign_currency VARCHAR(50), 
    sum_tax_foreign_currency VARCHAR(50), 
    sum_gross_foreign_currency VARCHAR(50), 
    sum_discounts_foreign_currency VARCHAR(50), 
    customer_internal_note TEXT, 
    show_net BOOLEAN, 
    send_type VARCHAR(50), 
    PRIMARY KEY (id), 
    FOREIGN KEY(contact_id) REFERENCES contacts (id)
); 